question:
consider
following
two
statements
function
f(x)
=|x|:
p.
continuous
real
values
x
q.
differentiable
true?
options:
(a)
p
true
q
false.
(b)
false
true.
(c)
(d)
let
set
n
elements.
number
ordered
pairs
largest
smallest
equivalence
relations
n<sup>2</sup>
0
1
maximum
different
boolean
functions
involving
variables?
2<sup>n</sup>
2<sup>2<sup>n</sup></sup>
2<sup>n<sup>2</sup></sup>
g
non-planar
graph
minimum
possible
edges.
9
edges
5
vertices
6
10
dag
v
=
{1,2,3,4,5,6},
shown
below.
<img
src="img/2007_5.png"
width="100px"
height="100px"
/>
topological
ordering?
123456
132456
132465
324165
problems
undecidable?
membership
problem
cfgs.
ambiguity
finiteness
fsas.
every
subset
regular
regular.
finite
non-regular
union
sets
infinite
many
3-to-8
line
decoders
enable
input
needed
construct
6-to-64
decoder
without
using
logic
gates?
7
8
four
variables:
f(w,x,y,z)
&sum;(1,3,4,6,9,11,12,14)
independent
one
variable.
variables.
three
dependent
4-way
associative
cache
consisting
128
lines
size
64
words.
cpu
generates
20-bit
address
word
main
memory.
bits
tag,
fields
respectively:
.
9,
6,
7,
5,
disk
pack
16
surfaces,
tracks
per
surface
256
sectors
track.
512
bytes
data
stored
bit
serial
manner
sector.
capacity
required
specify
particular
sector
mbyte,
19
28
20
gbyte,
height
binary
tree
root
leaf
nath.
nodes
h
is:
2<sup>h</sup>
-1
2<sup>h-1</sup>-1
2<sup>h+1</sup>-1
trees
formed
unlabeled
4
3
sorting
algorithms
lowest
worst-case
complexity?
merge
sort
bubble
quick
selection
segment
c-code:
<code>
int
j,
n;
j=1;
(j
<=
n)
j=j*2;
comparisons
made
execution
loop
>
&leftceiling;log<sub>2</sub>n&rightceiling;+1
&leftceiling;log<sub>2</sub>n&rightceiling;
&leftfloor;log<sub>2</sub>n&rightfloor;+1
group
contains
scheduling
2
applications.
match
entries
2.
gang
1.
guaranteed
rate
monotonic
real-time
r.
fair
share
3.
thread
p-3;
q-2;
r-1
p-1;
r-3
p-2;
q-3;
r-2
user
level
threads
kernel
threads.
false?
context
switch
time
longer
need
hardware
support.
related
scheduled
processors
multi-
processor
system.
blocking
blocks
top-down
parser?
recursive
descent
parser.
operator
precedence
lr(k)
lalr(k)
ethernet
manchester
encoding
used,
half
baud
rate.
twice
none
above.
uses
udp
transport
protocol?
http
telnet
dns
smtp
non-isomorphic
abelian
groups
order
there?
graph(x)
predicate
denotes
graph.
connected(x)
connected.
first
sentences
represent
statement:
“not
connected”?
&not;&forall;x(graph(x)
&rarr;
connected(x))
&exist;x(graph(x)
&and;
&not;connected(x))
&not;&forall;x(&not;graph(x)
&or;
&forall;x(graph(x)
graphs
eulerian
circuit?
k-regular
&
even
number.
complete
90
vertices.
complement
cycle
25
suppose
uniformly
randomly
select
permutation
20!
permutations
1,2,3,...,20.
probability
appears
earlier
position
selected
permutation?
1/2
1/10
9!/20!
4x4
matrix
eigenvalues
—5,-2,1,4.
eigenvalue
[a
i],
identity
matrix?
[i
a]
-5
-7
{a,b,c,d}.
partitions
&pi;<sub>1</sub>,&pi;<sub>2</sub>,&pi;<sub>3</sub>,&pi;<sub>4</sub>
s:
&pi;<sub>1</sub>
{<span
class="above_bar">abcd</span>}
,&pi;<sub>2</sub>
class="above_bar">ab</span>,<span
class="above_bar">cd</span>}
,&pi;<sub>3</sub>=
class="above_bar">abd</span>,<span
class="above_bar">d</span>}
,&pi;<sub>1</sub>
class="above_bar">a</span>,<span
class="above_bar">b</span>,<span
class="above_bar">c</span>,<span
&pr;
partial
s'=
{&pi;<sub>1</sub>,&pi;<sub>2</sub>,&pi;<sub>3</sub>,&pi;<sub>4</sub>}
defined
follows:
&pi;<sub>i</sub>
&pi;<sub>j</sub>,if
&pi;<sub>j</sub>.
poset
digram
(s',&pr;)
src="img/2007_26_1.png"
src="img/2007_26_2.png"
src="img/2007_26_3.png"
src="img/2007_26_4.png"
(column)
vectors
{x
&isin;
r<sup>3</sup>
|
x<sub>1</sub>+x<sub>2</sub>+x<sub>3</sub>
=0,
x<sup>t</sup>
=[x<sub>1</sub>,x<sub>2</sub>,x<sub>3</sub>]<sup>t</sup>
}.
{
[1,-1,0]<sup>t</sup>,[1,0,-1]<sup>t</sup>}
basis
subspace
x.
{{1,-1,0]<sup>t</sup>,{1,0,-1]<sup>t</sup>}
linearly
set,
span
therefore
series
x<sub>n+1</sub>
x<sub>3</sub>/2+9/8x<sub>n</sub>,x<sub>0</sub>=0.5
obtained
newton-raphson
method.
converges
1.5
&radic;2
1.6
1.4
state
deterministic
automaton
accepting
language
l=
{w|w
{0,1}<sup>*</sup>,
os
1s
w
divisible
respectively}
15
states
11
l
0<sup>i</sup>21<sup>i</sup>
&greaterequal;
0}
alphabet
{0,
1,
2}
recursive.
cfl.
language.
cfl
languages
regular?
{ww<sup>r</sup>|w
&isin;{0,1}<sup>+</sup>}
{ww<sup>r</sup>x|x,w
{wxw<sup>r</sup>|x,w
{xww<sup>r</sup>|x,w
&sum;(0,4,5,7,8,9,13,15).
expressions
equivalent
f?
(p)
x'y'z'+w'xy'+wy'z
+
xz
(q)
w'y'z'+wx'y'+xz
(r)
w'y'z'+wx'y'+xyz
xy'z
(s)
x'y'z'+wx'y'+w'y
r
define
connective
<sup>*</sup>
variables
as:
x<sup>*</sup>y=
xy
+x'y'.
z
x<sup>*</sup>y
p,
p:
x=y<sup>*</sup>z
q:
=x
r:x<sup>*</sup>y<sup>*</sup>z
=1
valid.
q,
multiplexer
inverter
allowed
used
implement
needed?
2<sup>n+1</sup>
2<sup>n-1</sup>
2<sup>n-2</sup>
look-ahead
carry
generator,
generate
g<sub>i</sub>
propagate
p<sub>i</sub>
inputs
a<sub>i</sub>
b<sub>i</sub>
given
by:
p<sub>i</sub>=a<sub>i</sub>
&oplus;
b<sub>i</sub>,
g<sub>i</sub>=
a<sub>i</sub>b<sub>i</sub>
sum
s<sub>i</sub>
c<sub>i+1</sub>
adder
=p<sub>i</sub>
c<sub>i</sub>,
c<sub>i+1</sub>=g<sub>i</sub>+p<sub>i</sub>c<sub>i</sub>
c<sub>0</sub>
carry.
two-level
implementation
generator.
assume
g<sub>i</sub>,
available
generator
circuit
gates
inputs.
4-bit
s<sub>3</sub>,
s<sub>2</sub>,
s<sub>1</sub>,
s<sub>0</sub>
c<sub>4</sub>
outputs
6,3
10,4
6,4
10,5
control
signal
counter
(where
“don’t
care”):
src="img/2007_36_1.png"
connected
src="img/2007_36_2.png"
height="100px"/>
gate
delays
negligible.
starts
0,
cycles
sequence:
3,
4,
2,
pipelined
stages:
if:
instruction
fetch
id:
decode
operand
ex:
execute
wb:
write
back
if,
id
wb
stages
take
clock
operation.
ex
stage
depends
instruction.
add
sub
instructions
mul
needs
stage.
forwarding
processor.
taken
sequence
instructions?
r2,r1,ro
r2
&larr;
r1
ro
r4,r3,r2
r4
r3
r6,r5,r4
r6
-
r5
14
postfix
expression
single
digit
operands
evaluated
stack:
^
/
note
exponentiation
operator.
top
elements
stack
are:
6,1
5,7
3,2
1,5
inorder
preorder
traversal
b
e
f
c
g,
respectively.
postorder
hash
table
seven,
starting
index
zero,
(3x+4)mod7.
assuming
initially
empty,
contents
1,3,8,10
inserted
closed
hashing?
—
empty
location
table.
8,-,-,-,-,-,10
1,8,10,—,-,-,3
1,-,-,-,-,-,3
1,10,8,—,-,-,3
unweighted,
undirected
graph,
shortest
path
node
computed
efficiently,
terms
complexity,
dijkstra’s
algorithm
s.
warshall’s
algorithm.
performing
dfs
bfs
function:
f(int
{static
r=0;
(n
0)
return
1;
3)
{r=
f(n-2)+2;
}
f(n-1)+r;
</code>
value
f(5)
?
18
n-ary
children
children.
internal
leaves
tree.
41,
i=10,
n?
function,
m.
gcd(n,m)
if(n%m
==
m;
n%m;
gcd(m,n);
calls
function?
&theta;(log<sub>2</sub>n)
&omega;(n)
&theta;(log<sub>2</sub>log<sub>2</sub>n)
&theta;(&radic;n)
complexity
dosomething
(int
if(n
2)
else
(dosomething(floor(sqrt(n)))
n);
&theta;(n<sup>2</sup>)
&theta;(nlog<sub>2</sub>n)
program
cellnode
represents
tree:
struct
*leftchild;
element;
*rightchild;
getvalue(struct
*ptr)
0;
(ptr
!=
null)
((ptr->leftchild
&&
(ptr->rightchild
null))
getvalue
(ptr->leftchild)
+getvalue
(ptr->rightchild);
(value);
returned
pointer
passed
argument
process
inserting
element
max
heap,
heap
represented
array.
perform
search
new
find
newly
element,
performed
&theta;(n)
formulae
conjunctive
normal
form?
formula,
truth
assignment
least
clauses
evaluate
formula
assignment,
one-fourth
weight
among
edge
weights
specific
w.
spanning
containing
e.
t,
adding
weight.
present
array
numbers
given,
well
determined.
2n
comparisons,
constant
c,
needed.
1.5n
nlog<sub>2</sub>n
code
segment:
isprime(n)
i,n;
for(i=2;i
sqrt(n);it++)
if(n%i
{printf(“not
prime\n”);
0;}
t(n)
denote
times
executed
n.
o(&radic;n)
&omega;(&radic;n)
&omega;(1)
o(n)
grammar
non-terminals
{s,c,s<sub>1</sub>}
,
terminals
t=
{a,
b,
i,
e},
start
symbol,
rules:
ictss<sub>1</sub>
s<sub>1</sub>
es
&epsilon;
ll(1)
because:
left
right
ambiguous.
context-free.
statements:
lr(1)
simplified
computer
op
r<sub>j</sub>,r<sub>i</sub>
performs
r<sub>j</sub>,
r<sub>i</sub>
stores
result
register
r<sub>i</sub>.
m,r<sub>i</sub>
val
content
memory
mov
moves
r<sub>i</sub>,m
registers,
either
sub.
basic
block:
t<sub>1</sub>
t<sub>2</sub>
t<sub>3</sub>
t<sub>4</sub>
final
computation
generated
block?
operating
system
remaining
(srt)
arrival
processes:
p1
p2
p3
30
p4
45
total
waiting
p2?
40
55
virtual
(fifo)
page
replacement
policy
allocates
fixed
frames
process.
increasing
allocated
sometimes
increases
fault
programs
exhibit
locality
reference.
true,
reason
false,
resource
types
x,
y,
z,
shared
processes.
units
type.
scenario,
column
alloc
type
process,
request
requested
execution.
processes
finish
last?
p0
po
above,
since
deadlock.
processes,
p|
p2,
access
critical
section
code.
synchronization
/*
*/
*
(true){
(true)
wants1
true;
wants2
(wants2==true)
;
(wants1==true)
wants1=false;
wants2=false;
remainder
here,
variables,
initialized
construct?
ensure
mutual
exclusion.
bounded
waiting.
requires
enter
strict
alternation.
prevent
deadlocks,
ensures
information
collection
students
relation
studinfo(studid,
name,
sex).
enroll(studid,
courseid)
gives
student
enrolled
(or
taken)
course(s).
course
male
female
student.
relational
algebra
represent?
&prod;<sub>courseid</sub>((&prod;<sub>studid</sub>(&sigma;<sub>sex=
"female"</sub>(studinfo))
&prod;<sub>courseid</sub>(enroll))
enroll)
courses
enrolled,
proper
enrolled.
employee(<ins>name</ins>,
sex,
supervisorname)
name
key.
supervisorname
supervisor
employee
consideration.
tuple
calculus
query
produce?
{e.name
employee(e)
(&forall;x)[
&not;employee(x)
x.supervisorname
&ne;
e.name
x.sex
"male"]
names
employees
supervisor.
immediate
subordinates.
subordinates:
employee(<ins>empld</ins>,
department,
salary)
queries
q<sub>1</sub>,
q<sub>2</sub>
department
employee,
want
get
higher
salary
anyone
arbitrary
table?
q<sub>1</sub>:
e.empld
exists
(select
s.department
"5"
s.salary
>=
e.salary)
q<sub>2</sub>:
e.salary
distinct
"5")
q<sub>1</sub>
correct
query.
produce
answer.
neither
attributes
bcnf.
key
attribute
2nf.
prime
transitively
3nf
relation.
bcnf
b<sup>+</sup>-tree
(value,
record
pointer)
hold.
block
1k
bytes,
long,
field
long
node?
63
67
68
schedules
transactions.
s<sub>1</sub>:
r<sub>1</sub>(x);r<sub>1</sub>(y);r<sub>2</sub>(x);r<sub>2</sub>(y);w<sub>2</sub>(y);w<sub>1</sub>(x)
s<sub>2</sub>:
r<sub>1</sub>(x);r<sub>2</sub>(x);r<sub>2</sub>(y);w<sub>2</sub>(y);;r<sub>1</sub>(y);w<sub>1</sub>(x)
s<sub>2</sub>
conflict
serializable.
serializable
stations
slotted
lan.
station
attempts
transmit
slot.
transmits
slot?
np(1
p)<sup>n-1</sup>
(1
p(1
1-(1
token
ring
network
transmission
speed
10<sup>7</sup>
bps
propagation
200
metres/&mu;s.
1-bit
delay
to:
500
metres
cable.
50
class
host
split
subnets
6-bit
subnet
hosts
subnet?
62
262142
hosts.
1022
1024
message
11001001
transmitted
crc
polynomial
x<sup>3</sup>
protect
errors.
11001001000
11001001011
11001010
110010010011
distance
kilometres.
k
long.
kilometre
seconds.
bits/second
channel
capacity.
processing
negligible,
frame
utilization,
sliding
window
protocol
&leftceiling;log<sub>2</sub>(2ltr
2k)/k&rightceiling;
&leftceiling;log<sub>2</sub>(2ltr)/k&rightceiling;
k)/k&rightceiling;
k)/2k&rightceiling;
following:
application
layer
bgp
tcp
link
ppp
4.
5.
physical
p-2,
q-1,
r-3,
s-5
p-1,
q-4,
r-2,
s-3
r-1,
segment.
r1,
general
purpose
registers.
operation
(no.
words)
r1,(3000)
m[3000]
loop:
r2,(r3)
m[r3]
r2,r1
r1+r2
(r3),r2
inc
r3+1
dec
r1-1
bnz
branch
zero
halt
stop
3000
2000.
locations
2000
2010
100.
loaded
1000.
decimal.
addressable.
references
accessing
executing
completely
21
program,
:
100
101
102
110
byte
addressable
32
bits.
interrupt
occurs
"inc
r3",
pushed
stack?
1005
1020
1040
automaton:
src="img/2007_74.png"
accepted
b<sup>*</sup>ab<sup>*</sup>ab<sup>*</sup>ab<sup>*</sup>
(a+b)<sup>*</sup>
b<sup>*</sup>a(a+b)
b<sup>*</sup>ab<sup>*</sup>ab<sup>*</sup>
fsa
letters
a,b,c,d,e,f
probabilities
1/2,1/4,1/8,1/16,1/32,1/32,
huffman
0,10,110,1110,11110,11111
11,10,011,010,001,000
11,10,01,001,0001,
0000
110,100,010,000,
001,111
respectively
average
length
a,b,c,d,e,f?
2.1875
2.25
1.9375
cfg
{s,
a,
b}
non-terminal
alphabet,
{a,b}
terminal
symbol
production
s&rarr;ab
s&rarr;ba
b&rarr;b
a&rarr;a
b&rarr;bs
a&rarr;as
b&rarr;abb
a&rarr;baa
strings
grammar?
aaaabb
aabbbb
aabbab
abbbba
answer
string
aabbab,
derivation
machine
2<sup>16</sup>
bytes.
direct
mapped
two-dimensional
1100h.
empty.
accessed
twice.
change
accesses.
misses
occur
total?
48
56
59
replaced
second
time?
12
frames.
pages
initially.
makes
(reference
string):
optimal
faults
reference
string?
recently
(lru)
practical
approximation
replacement.
string,
lru
policy?
robot
placed
cartesian
plane.
step
move
unit
right,
i.e.,
(i,j)
(i+1,j)
(i,j+1).
paths
reach
point
(10,10)
initial
(0,0)?
<sup>20</sup>c<sub>10</sub>
2<sup>20</sup>
2<sup>10</sup>
traverse
(4,4)
(5,4).
constraint,
2<sup>9</sup>
2<sup>19</sup>
<sup>8</sup>c<sub>4</sub>
<sup>11</sup>c<sub>5</sub>
